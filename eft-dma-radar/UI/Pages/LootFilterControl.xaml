<UserControl x:Class="eft_dma_radar.UI.Pages.LootFilterControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:local="clr-namespace:eft_dma_radar.Converters"
             x:Name="GroupPanel"
             Unloaded="UserControl_Unloaded"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="600"
             MinWidth="200" MinHeight="200">
    <UserControl.Resources>
        <local:ColorHexToBrushConverter x:Key="ColorHexToBrushConverter"/>
        <local:ItemIconConverter x:Key="ItemIconConverter"/>
        <local:BoolToOpacityConverter x:Key="BoolToOpacityConverter"/>
        <local:Boolean2VisibilityConverter x:Key="Boolean2VisibilityConverter"/>
    
        <!-- drag & drop styles -->
        <Style x:Key="DragDropIndicatorStyle" TargetType="Border">
            <Setter Property="Height" Value="2"/>
            <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
            <Setter Property="Margin" Value="10,0"/>
            <Setter Property="CornerRadius" Value="1"/>
            <Setter Property="Visibility" Value="Collapsed"/>
        </Style>

        <!-- Filter groups listviewitem style -->
        <Style x:Key="DragDropFilterGroupsListViewItemStyle" TargetType="ListViewItem" BasedOn="{StaticResource FilterGroupsListViewItemStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Border x:Name="ItemBorder"
                                Background="{DynamicResource RegionBrush}"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                CornerRadius="6"
                                Padding="10,8">
                            <Grid>
                                <!-- drop indicator -->
                                <Border x:Name="TopDropIndicator" 
                                        Style="{StaticResource DragDropIndicatorStyle}"
                                        VerticalAlignment="Top"
                                        Margin="0,-1,0,0"/>

                                <Border x:Name="SelectionOverlay"
                                        Background="Transparent"
                                        CornerRadius="6"
                                        Margin="-10,-6"
                                        Opacity="0"/>

                                <!-- content w/ drag handle -->
                                <DockPanel>
                                    <!-- drag handle -->
                                    <Border DockPanel.Dock="Left"
                                            Width="16" Height="16"
                                            Background="Transparent"
                                            Margin="0,0,8,0"
                                            VerticalAlignment="Center"
                                            Cursor="SizeAll">
                                        <Path Width="10" Height="10"
                                              Data="M0,2 L10,2 M0,6 L10,6 M0,10 L10,10"
                                              Stroke="{DynamicResource SecondaryTextBrush}"
                                              StrokeThickness="1.5"
                                              Opacity="0.6"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                                    </Border>

                                    <!-- enabled indicator -->
                                    <Ellipse DockPanel.Dock="Right"
                                             Tag="{Binding}"
                                             Width="10" Height="10"
                                             Cursor="Hand"
                                             ToolTip="Click to toggle filter group"
                                             MouseLeftButtonDown="GroupStatusIndicator_MouseLeftButtonDown">
                                        <Ellipse.Style>
                                            <Style TargetType="Ellipse">
                                                <Setter Property="Fill" Value="#FF4CAF50"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Enabled}" Value="False">
                                                        <Setter Property="Fill" Value="#FFF44336"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Ellipse.Style>
                                    </Ellipse>

                                    <!-- group name -->
                                    <TextBlock Text="{Binding Name}" 
                                               VerticalAlignment="Center"
                                               FontWeight="Medium"
                                               TextTrimming="CharacterEllipsis"
                                               Foreground="{DynamicResource PrimaryTextBrush}"
                                               Margin="0,0,8,0"
                                               ToolTip="{Binding Name}"/>
                                </DockPanel>

                                <!-- drop indicator at bottom -->
                                <Border x:Name="BottomDropIndicator" 
                                        Style="{StaticResource DragDropIndicatorStyle}"
                                        VerticalAlignment="Bottom"
                                        Margin="0,0,0,-1"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ItemBorder" Property="Background" Value="{DynamicResource SecondaryRegionBrush}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="SelectionOverlay" Property="Background" Value="{DynamicResource PrimaryBrush}"/>
                                <Setter TargetName="SelectionOverlay" Property="Opacity" Value="0.3"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="SelectionOverlay" Property="Opacity" Value="0.4"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Loot items listviewitem style -->
        <Style x:Key="DragDropLootItemsListViewItemStyle" TargetType="ListViewItem" BasedOn="{StaticResource ModernListViewItemStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Border x:Name="ItemBorder"
                                Background="{DynamicResource RegionBrush}"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                CornerRadius="8"
                                Padding="6,2">
                            <Grid>
                                <!-- drop indicator at top -->
                                <Border x:Name="TopDropIndicator" 
                                        Style="{StaticResource DragDropIndicatorStyle}"
                                        VerticalAlignment="Top"
                                        Margin="0,-1,0,0"/>

                                <!-- Selection background overlay -->
                                <Border x:Name="SelectionOverlay"
                                        Background="Transparent"
                                        CornerRadius="8"
                                        Margin="-6,-2"
                                        Opacity="0"/>

                                <!-- Main content -->
                                <DockPanel>
                                    <!-- drag handle -->
                                    <Border DockPanel.Dock="Left"
                                            x:Name="DragHandle"
                                            Width="16" Height="16"
                                            Background="Transparent"
                                            Margin="0,0,8,0"
                                            VerticalAlignment="Center"
                                            Cursor="SizeAll">
                                        <Path Width="10" Height="10"
                                              Data="M0,2 L10,2 M0,6 L10,6 M0,10 L10,10"
                                              Stroke="{DynamicResource SecondaryTextBrush}"
                                              StrokeThickness="1.5"
                                              Opacity="0.6"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                                    </Border>

                                    <!-- notification bell -->
                                    <Path DockPanel.Dock="Right"
                                          Tag="{Binding}"
                                          Width="18" Height="18"
                                          Stretch="Uniform"
                                          Data="{StaticResource BellGeometry}"
                                          Fill="{DynamicResource PrimaryTextBrush}"
                                          Opacity="{Binding Notify, Converter={StaticResource BoolToOpacityConverter}}"
                                          Cursor="Hand"
                                          Margin="8,0,0,0"
                                          ToolTip="Toggle notifications for this item"
                                          MouseLeftButtonDown="NotifyIcon_MouseLeftButtonDown">
                                        <Path.Style>
                                            <Style TargetType="Path">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Notify}" Value="True">
                                                        <Setter Property="Fill" Value="{DynamicResource SuccessBrush}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Path.Style>
                                    </Path>

                                    <!-- note button -->
                                    <Button DockPanel.Dock="Right"
                                            Tag="{Binding}"
                                            Width="20" Height="20"
                                            Background="Transparent"
                                            BorderThickness="0"
                                            Cursor="Hand"
                                            Margin="4,0,0,0"
                                            ToolTip="{Binding HasNote, Converter={x:Static local:BoolToStringConverter.Instance}, ConverterParameter='Edit note|Add note'}"
                                            Click="NoteButton_Click">
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="Button">
                                                            <Border x:Name="NoteBorder"
                                                                    Background="{TemplateBinding Background}"
                                                                    CornerRadius="3"
                                                                    BorderThickness="0"
                                                                    BorderBrush="Transparent">
                                                                <Path x:Name="NoteIcon"
                                                                      Width="16" Height="16"
                                                                      Stretch="Uniform"
                                                                      Data="M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z"
                                                                      Fill="{DynamicResource SecondaryTextBrush}"
                                                                      HorizontalAlignment="Center"
                                                                      VerticalAlignment="Center"/>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <DataTrigger Binding="{Binding HasNote}" Value="True">
                                                                    <Setter TargetName="NoteIcon" Property="Fill" Value="#FFFFA726"/>
                                                                </DataTrigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter TargetName="NoteBorder" Property="Background" Value="{DynamicResource SecondaryRegionBrush}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter TargetName="NoteBorder" Property="RenderTransform">
                                                                        <Setter.Value>
                                                                            <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Button.Style>
                                    </Button>

                                    <!-- blacklist button -->
                                    <Button DockPanel.Dock="Right"
                                            Tag="{Binding}"
                                            Width="20" Height="20"
                                            Background="Transparent"
                                            BorderThickness="0"
                                            Cursor="Hand"
                                            Margin="4,0,0,0"
                                            ToolTip="{Binding Blacklist, Converter={x:Static local:BoolToStringConverter.Instance}, ConverterParameter='Remove from blacklist|Add to blacklist'}"
                                            Click="BlacklistButton_Click">
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="Button">
                                                            <Border x:Name="BlacklistBorder"
                                                                    Background="{TemplateBinding Background}"
                                                                    CornerRadius="3"
                                                                    BorderThickness="0"
                                                                    BorderBrush="Transparent">
                                                                <!-- blocked icon -->
                                                                <Path x:Name="BlacklistIcon"
                                                                      Width="16" Height="16"
                                                                      Stretch="Uniform"
                                                                      Data="M12,2C17.5,2 22,6.5 22,12C22,17.5 17.5,22 12,22C6.5,22 2,17.5 2,12C2,6.5 6.5,2 12,2M4,12C4,16.4 7.6,20 12,20C13.85,20 15.55,19.35 16.9,18.24L5.76,7.1C4.65,8.45 4,10.15 4,12M20,12C20,7.6 16.4,4 12,4C10.15,4 8.45,4.65 7.1,5.76L18.24,16.9C19.35,15.55 20,13.85 20,12Z"
                                                                      Fill="{DynamicResource SecondaryTextBrush}"
                                                                      HorizontalAlignment="Center"
                                                                      VerticalAlignment="Center"/>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <DataTrigger Binding="{Binding Blacklist}" Value="True">
                                                                    <Setter TargetName="BlacklistIcon" Property="Fill" Value="#FFFF5722"/>
                                                                </DataTrigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter TargetName="BlacklistBorder" Property="Background" Value="{DynamicResource SecondaryRegionBrush}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter TargetName="BlacklistBorder" Property="RenderTransform">
                                                                        <Setter.Value>
                                                                            <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Button.Style>
                                    </Button>

                                    <!-- color picker -->
                                    <Border DockPanel.Dock="Right"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Margin="8,0,4,0">
                                        <Button Click="ColorPicker_Click"
                                                Width="32" Height="24"
                                                Background="{Binding Color, Converter={StaticResource ColorHexToBrushConverter}}"
                                                BorderBrush="{DynamicResource BorderBrush}"
                                                BorderThickness="1"
                                                Cursor="Hand"
                                                ToolTip="Change item color">
                                            <Button.Template>
                                                <ControlTemplate TargetType="Button">
                                                    <Border x:Name="ColorBorder"
                                                            Background="{TemplateBinding Background}"
                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                            CornerRadius="4"/>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="ColorBorder" Property="BorderThickness" Value="2"/>
                                                            <Setter TargetName="ColorBorder" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter TargetName="ColorBorder" Property="RenderTransform">
                                                                <Setter.Value>
                                                                    <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                    </Border>

                                    <!-- item icon -->
                                    <Border DockPanel.Dock="Left"
                                            Tag="{Binding}"
                                            Width="48" Height="40"
                                            Background="{DynamicResource ThirdRegionBrush}"
                                            CornerRadius="6"
                                            Cursor="Hand"
                                            Margin="0,0,12,0"
                                            ToolTip="Toggle item filtering"
                                            MouseLeftButtonDown="EnabledIcon_MouseLeftButtonDown">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Setter Property="BorderBrush" Value="#FF4CAF50"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Enabled}" Value="False">
                                                        <Setter Property="BorderBrush" Value="#FFF44336"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <Image Width="40"
                                               Height="40"
                                               Source="{Binding ItemID, Converter={StaticResource ItemIconConverter}}"
                                               RenderOptions.BitmapScalingMode="HighQuality">
                                        </Image>
                                    </Border>

                                    <!-- item name -->
                                    <StackPanel VerticalAlignment="Center"
                                        Margin="0,0,8,0">
                                        <TextBlock Text="{Binding Name}" 
                                                   FontWeight="Medium"
                                                   TextTrimming="CharacterEllipsis"
                                                   Foreground="{DynamicResource PrimaryTextBrush}"/>
                                    </StackPanel>
                                </DockPanel>

                                <!-- drop indicator -->
                                <Border x:Name="BottomDropIndicator" 
                                        Style="{StaticResource DragDropIndicatorStyle}"
                                        VerticalAlignment="Bottom"
                                        Margin="0,0,0,-1"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ItemBorder" Property="Background" Value="{DynamicResource SecondaryRegionBrush}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="SelectionOverlay" Property="Background" Value="{DynamicResource PrimaryBrush}"/>
                                <Setter TargetName="SelectionOverlay" Property="Opacity" Value="0.3"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="SelectionOverlay" Property="Opacity" Value="0.4"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- header -->
        <Border x:Name="DragHandle" Grid.Row="0" Style="{StaticResource PanelHeader}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Loot Filter" Style="{StaticResource PanelHeaderText}"/>

                <!-- import/export menu button -->
                <Button x:Name="btnMenu" Tag="ContextMenu"
                        Grid.Column="1" 
                        Width="26" Height="26" Margin="0,0,5,0"
                        Style="{StaticResource ButtonIcon}"
                        ToolTip="Import/Export Options"
                        hc:IconElement.Width="18"
                        hc:IconElement.Geometry="{StaticResource EllipsisVerticalGeometry}">
                    <Button.ContextMenu>
                        <ContextMenu x:Name="ImportExportMenu" 
                                     Placement="Bottom" 
                                     HorizontalOffset="-85"
                                     MaxWidth="200">
                            <MenuItem x:Name="mnuExportSelected" Tag="ExportSelectedFilter" Header="Export Selected">
                                <MenuItem.Icon>
                                    <Path Width="14" Height="14"
                                          Stretch="Uniform"
                                          Data="M9,16V10H5L12,3L19,10H15V16H9M5,20V18H19V20H5Z"
                                          Fill="{DynamicResource TextIconBrush}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem x:Name="mnuExportAll" Tag="ExportAllFilters" Header="Export All">
                                <MenuItem.Icon>
                                    <Path Width="14" Height="14"
                                          Stretch="Uniform"
                                          Data="M9,16V10H5L12,3L19,10H15V16H9M5,20V18H19V20H5Z"
                                          Fill="{DynamicResource TextIconBrush}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator Margin="-28,0,0,0"/>
                            <MenuItem x:Name="mnuImport" Tag="ImportFilters" Header="Import">
                                <MenuItem.Icon>
                                    <Path Width="14" Height="14"
                                          Stretch="Uniform"
                                          Data="M5,20H19V18H5M19,9H15V3H9V9H5L12,16L19,9Z"
                                          Fill="{DynamicResource TextIconBrush}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </Button.ContextMenu>
                </Button>

                <Border Grid.Column="2" Style="{StaticResource CloseButtonBorder}">
                    <Button x:Name="btnCloseHeader" Style="{StaticResource CloseButton}"/>
                </Border>
            </Grid>
        </Border>

        <!-- main content (left-right layout) -->
        <Grid Grid.Row="1">
            <Border Background="{DynamicResource RegionBrush}" CornerRadius="0,0,8,8"/>

            <Grid Margin="8">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="170" MinWidth="150"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*" MinWidth="200"/>
                </Grid.ColumnDefinitions>

                <!-- left side (filter groups list) -->
                <Grid Margin="0,0,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!-- group name & add -->
                    <Grid Grid.Row="0" Margin="0,0,0,8">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>

                        <hc:TextBox x:Name="txtNewGroupName" 
                                        Grid.Column="0"
                                        Height="24"
                                        FontSize="11"
                                        hc:InfoElement.Placeholder="Group name..."/>

                        <Button x:Name="btnAddGroup" Tag="AddGroup"
                                    Grid.Column="1"
                                    Height="28" Width="36" Margin="6,0,0,0"
                                    Style="{StaticResource ButtonIcon}"
                                    ToolTip="Add Filter Group"
                                    hc:IconElement.Width="14"
                                    hc:IconElement.Geometry="{StaticResource PlusGeometry}"/>
                    </Grid>

                    <!-- filter groups list -->
                    <ListView x:Name="lstFilterGroups" 
                              Grid.Row="1"
                              ItemsSource="{Binding GroupList, RelativeSource={RelativeSource AncestorType=UserControl}}"
                              SelectedItem="{Binding SelectedGroup, Mode=TwoWay}"
                              Background="Transparent"
                              BorderThickness="0"
                              Margin="0,0,0,0"
                              SelectionMode="Single"
                              AllowDrop="True"
                              Style="{StaticResource ModernListViewStyle}">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem" BasedOn="{StaticResource DragDropFilterGroupsListViewItemStyle}"/>
                        </ListView.ItemContainerStyle>
                    </ListView>
                </Grid>

                <!-- splitter -->
                <GridSplitter Grid.Column="1" 
                              Style="{StaticResource ProfessionalGridSplitterStyle}"/>

                <!-- right side (filter settings & items) -->
                <Grid Grid.Column="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Expander x:Name="expLootFilterSettings" Grid.Row="0" Header="Filter Settings" Style="{StaticResource PanelExpander}" IsExpanded="True">
                        <hc:SimpleStackPanel Style="{StaticResource ExpanderContent}" Margin="6,8,2,0">
                            <GroupBox Header="Filter Settings"
                                      Style="{StaticResource TransparentGroupBoxStyle}">
                                <hc:SimpleStackPanel Margin="8,0,8,0">
                                    <!-- group name & remove button -->
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <hc:TextBox x:Name="txtGroupName" Tag="GroupName"
                                                    Grid.Column="0"
                                                    Height="28" Margin="0,0,8,0"/>

                                        <Button x:Name="btnRemoveGroup" Tag="RemoveGroup"
                                                Grid.Column="1"
                                                Height="28" Width="34" 
                                                Style="{StaticResource ButtonIcon}"
                                                ToolTip="Remove Filter Group"
                                                hc:IconElement.Width="14"
                                                hc:IconElement.Geometry="{StaticResource MinusGeometry}"/>
                                    </Grid>

                                    <!-- static & notify controls -->
                                    <Grid Margin="0,0,0,8">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <CheckBox x:Name="chkStatic" Content="Static" Tag="StaticFilter"
                                                  Grid.Column="0" Margin="0,0,20,0"
                                                  Style="{StaticResource DynamicCheckBoxStyle}"/>

                                        <CheckBox x:Name="chkNotify" Content="Notify" Tag="FilterNotifications"
                                                  Grid.Column="1" Margin="0,0,10,0"
                                                  Style="{StaticResource DynamicCheckBoxStyle}"/>

                                        <StackPanel Orientation="Horizontal" Grid.Column="2" 
                                                    Visibility="{Binding IsChecked, ElementName=chkNotify, Converter={StaticResource Boolean2VisibilityConverter}}">
                                            <hc:NumericUpDown x:Name="nudNotifyTime" Tag="NotificationTime"
                                                              Minimum="0" Maximum="3600" Width="60" Height="28"
                                                              ToolTip="Interval in seconds for repeat notifications"
                                                              Margin="0,0,5,0"/>
                                            <TextBlock Text="sec" 
                                                       VerticalAlignment="Center"
                                                       Style="{StaticResource LabelText}"
                                                       Margin="0"/>
                                        </StackPanel>
                                    </Grid>
                                </hc:SimpleStackPanel>
                            </GroupBox>
                        </hc:SimpleStackPanel>
                    </Expander>

                    <Expander x:Name="expLootFilterItems" Grid.Row="1" Header="Filter Items" Style="{StaticResource PanelExpander}" IsExpanded="True">
                        <Grid Margin="6,8,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Grid Grid.Row="0" Margin="0,0,0,8">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <hc:TextBox x:Name="txtItemSearch" Tag="ItemSearch"
                                            Grid.Column="0"
                                            Height="28" Margin="0,0,5,0"
                                            hc:InfoElement.Placeholder="Search item..."/>

                                <Button x:Name="btnAddItem" Content="Add" Tag="AddItem"
                                        Grid.Column="1" Height="28" Width="36"
                                        Style="{StaticResource ButtonIcon}"
                                        ToolTip="Add Item"
                                        hc:IconElement.Width="14"
                                        hc:IconElement.Geometry="{StaticResource PlusGeometry}"/>

                                <Button x:Name="btnRemoveItem" Content="Remove" Tag="RemoveItem"
                                        Grid.Column="2" Height="28" Width="34"
                                        Style="{StaticResource ButtonIcon}"
                                        ToolTip="Remove Item"
                                        hc:IconElement.Width="14"
                                        hc:IconElement.Geometry="{StaticResource MinusGeometry}"/>
                            </Grid>

                            <hc:ComboBox x:Name="cboItems" 
                                         Grid.Row="1"
                                         DisplayMemberPath="Name" 
                                         SelectedValuePath="Id"
                                         Height="28" Margin="0,0,0,10"
                                         hc:InfoElement.Placeholder="Select item from search results"/>

                            <hc:SimpleStackPanel Orientation="Horizontal" Grid.Row="2" Margin="0,0,0,8">
                                <TextBlock Grid.Column="0" 
                                           Text="Bulk Actions:" 
                                           VerticalAlignment="Center"
                                           Margin="0,0,6,0"
                                           Style="{StaticResource LabelText}"
                                           FontSize="12"/>

                                <Button x:Name="btnBulkColor" Tag="BulkColor"
                                        Margin="0,0,4,0" Height="28" Width="60"
                                        Style="{StaticResource ButtonPrimary}"
                                        ToolTip="Change color of selected items"
                                        Content="Color"
                                        FontSize="12"/>

                                <Button x:Name="btnBulkEnable" Tag="BulkEnable"
                                        Margin="0,0,4,0" Height="28" Width="60"
                                        Style="{StaticResource ButtonPrimary}"
                                        ToolTip="Enable selected items"
                                        Content="Enable"
                                        FontSize="12"/>

                                <Button x:Name="btnBulkDisable" Tag="BulkDisable"
                                        Margin="0,0,4,0" Height="28" Width="60"
                                        Style="{StaticResource ButtonPrimary}"
                                        ToolTip="Disable selected items"
                                        Content="Disable"
                                        FontSize="12"/>

                                <Button x:Name="btnBulkNotify" Tag="BulkNotify"
                                        Height="28" Width="60"
                                        Style="{StaticResource ButtonPrimary}"
                                        ToolTip="Toggle notifications for selected items"
                                        Content="Notify"
                                        FontSize="12"/>
                            </hc:SimpleStackPanel>

                            <Border Grid.Row="3" Style="{StaticResource ContainerListBorder}">
                                <ListView x:Name="GroupedItemsListView" 
                                          Style="{StaticResource ModernListViewStyle}"
                                          SelectionMode="Extended"
                                          AllowDrop="True">
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem" BasedOn="{StaticResource DragDropLootItemsListViewItemStyle}"/>
                                    </ListView.ItemContainerStyle>
                                </ListView>
                            </Border>

                            <!-- info label -->
                            <TextBlock Grid.Row="4"
                                           Text="Drag filter groups to reorder priority • Drag items to reorder within group • Ctrl+Click or Shift+Click to multi-select items" 
                                           Style="{StaticResource LabelText}" 
                                           Margin="0,5,0,0" 
                                           HorizontalAlignment="Center"
                                           Foreground="{DynamicResource SecondaryTextBrush}"
                                           FontStyle="Italic"
                                           FontSize="12"/>
                        </Grid>
                    </Expander>
                </Grid>
            </Grid>

            <!-- resize handle -->
            <Grid Style="{StaticResource ResizeHandle}" MouseLeftButtonDown="ResizeHandle_MouseLeftButtonDown">
                <Path Style="{StaticResource ResizeHandleIcon}"/>
            </Grid>
        </Grid>
    </Grid>
</UserControl>